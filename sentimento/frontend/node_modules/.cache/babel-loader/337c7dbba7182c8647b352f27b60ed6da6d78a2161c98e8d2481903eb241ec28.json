{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthony Lupica\\\\source\\\\repos\\\\SoftwareGirlies\\\\sentimento\\\\frontend\\\\src\\\\components\\\\DarkLightToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DarkLightToggle() {\n  _s();\n  /*\r\n     theme = holds current state\r\n     toggleTheme = function to change current state\r\n     useState(false) = passes in initial state for theme of 'dark'\r\n  */\n  const [theme, toggleTheme] = useState('Dark');\n\n  // toggler gets called on button click, and simply switches the theme\n  const toggler = () => {\n    if (theme == 'Light') {\n      toggleTheme('Dark');\n    } else {\n      toggleTheme('Light');\n    }\n  };\n\n  // useEffect hook to switch classNames according to theme \n  useEffect(() => {\n    console.log(\"nav\" + theme);\n    document.body.className = \"body\" + theme;\n    document.getElementsByClassName(\"nav\").className = \"nav\" + theme;\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `{$theme}Theme`,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggler,\n      children: \"themeToggler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(DarkLightToggle, \"kCWTQkGII07X/teVEBL7vWsAiBM=\");\n_c = DarkLightToggle;\nvar _c;\n$RefreshReg$(_c, \"DarkLightToggle\");","map":{"version":3,"names":["React","useState","useEffect","DarkLightToggle","theme","toggleTheme","toggler","console","log","document","body","className","getElementsByClassName"],"sources":["C:/Users/Anthony Lupica/source/repos/SoftwareGirlies/sentimento/frontend/src/components/DarkLightToggle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function DarkLightToggle() {\r\n\r\n    /*\r\n       theme = holds current state\r\n       toggleTheme = function to change current state\r\n       useState(false) = passes in initial state for theme of 'dark'\r\n    */\r\n    const [theme, toggleTheme] = useState('Dark');\r\n\r\n    // toggler gets called on button click, and simply switches the theme\r\n    const toggler = () => {\r\n        if (theme == 'Light') {\r\n            toggleTheme('Dark');\r\n        } else {\r\n            toggleTheme('Light');\r\n        }\r\n    };\r\n\r\n    // useEffect hook to switch classNames according to theme \r\n    useEffect(() => {\r\n        console.log(\"nav\" + theme)\r\n        document.body.className = \"body\" + theme;\r\n        document.getElementsByClassName(\"nav\").className = \"nav\" + theme;\r\n    }, [theme]);\r\n\r\n    return (\r\n        <div className={`{$theme}Theme`}>\r\n            <button onClick={toggler}>themeToggler</button>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,eAAe,SAASC,eAAe,GAAG;EAAA;EAEtC;AACJ;AACA;AACA;AACA;EACI,MAAM,CAACC,KAAK,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,MAAM,CAAC;;EAE7C;EACA,MAAMK,OAAO,GAAG,MAAM;IAClB,IAAIF,KAAK,IAAI,OAAO,EAAE;MAClBC,WAAW,CAAC,MAAM,CAAC;IACvB,CAAC,MAAM;MACHA,WAAW,CAAC,OAAO,CAAC;IACxB;EACJ,CAAC;;EAED;EACAH,SAAS,CAAC,MAAM;IACZK,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGJ,KAAK,CAAC;IAC1BK,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAG,MAAM,GAAGP,KAAK;IACxCK,QAAQ,CAACG,sBAAsB,CAAC,KAAK,CAAC,CAACD,SAAS,GAAG,KAAK,GAAGP,KAAK;EACpE,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACI;IAAK,SAAS,EAAG,eAAe;IAAA,uBAC5B;MAAQ,OAAO,EAAEE,OAAQ;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QAC7C;AAEd;AAAC,GA9BuBH,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}